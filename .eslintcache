[{"D:\\311's learning\\my-app\\src\\index.js":"1","D:\\311's learning\\my-app\\src\\reportWebVitals.js":"2","D:\\311's learning\\my-app\\src\\App.js":"3","D:\\311's learning\\my-app\\src\\MemeGenerator.js":"4","D:\\311's learning\\my-app\\src\\Header.js":"5"},{"size":510,"mtime":1621859173662,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":246,"mtime":1621860777538,"results":"9","hashOfConfig":"7"},{"size":2469,"mtime":1621918509767,"results":"10","hashOfConfig":"7"},{"size":279,"mtime":1621860529342,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vf7313",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\311's learning\\my-app\\src\\index.js",[],["23","24"],"D:\\311's learning\\my-app\\src\\reportWebVitals.js",[],"D:\\311's learning\\my-app\\src\\App.js",[],"D:\\311's learning\\my-app\\src\\MemeGenerator.js",["25","26"],"D:\\311's learning\\my-app\\src\\Header.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":24,"column":15,"nodeType":"33","endLine":29,"endColumn":6},{"ruleId":"34","severity":1,"message":"35","line":70,"column":13,"nodeType":"36","endLine":70,"endColumn":41},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]